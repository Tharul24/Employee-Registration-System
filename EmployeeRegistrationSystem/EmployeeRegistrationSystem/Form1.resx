<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        vncfkiw+qlQgP//Z
</value>
  </data>
</root>